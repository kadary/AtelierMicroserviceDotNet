apiVersion: apps/v1
kind: Deployment
metadata:
  name: loki
  namespace: microservices
spec:
  replicas: 1
  selector:
    matchLabels:
      app: loki
  template:
    metadata:
      labels:
        app: loki
    spec:
      containers:
      - name: loki
        image: grafana/loki:latest
        args:
        - "-config.file=/etc/loki/local-config.yaml"
        ports:
        - containerPort: 3100
          name: http
        resources:
          limits:
            memory: "512Mi"
            cpu: "500m"
          requests:
            memory: "256Mi"
            cpu: "250m"
        livenessProbe:
          httpGet:
            path: /ready
            port: 3100
          initialDelaySeconds: 45
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /ready
            port: 3100
          initialDelaySeconds: 45
          periodSeconds: 10
        volumeMounts:
        - name: loki-config
          mountPath: /etc/loki/local-config.yaml
          subPath: loki-config.yaml
        - name: loki-data
          mountPath: /tmp/loki
      volumes:
      - name: loki-config
        configMap:
          name: loki-config
      - name: loki-data
        emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: loki-service
  namespace: microservices
spec:
  selector:
    app: loki
  ports:
  - port: 3100
    targetPort: 3100
    name: http